{"version":3,"sources":["logo.svg","components/points-line-chart.tsx","models/football-scores-match-list.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ReactChart","register","BarController","LinearScale","BarElement","TimeScale","Tooltip","CategoryScale","LineController","PointElement","LineElement","EventOutcome","defaultState","showTrendLines","showAllDataPoints","showYears","PointsLineChart","props","minimumYear","maximumYear","pointsPerYear","eventsPerYear","handleShowTrendLines","setState","prevState","nextState","console","warn","JSON","stringify","handleShowAllDataPoints","handleShowYear","year","state","redRgba","redLineColour","redLegendFillColour","purpleRgba","purpleLineColour","purpleLegendFillColour","slateBlueRgba","slateBlueLineColour","slateBlueLegendFillColour","greyLineColour","aliceBlueRgba","aliceBlueLineColour","aliceBlueLegendFillColour","greenRgba","greenLineColour","greenLegendFillColour","orangeRgba","orangeLineColour","orangeLegendFillColour","defaultChartDataSet","fill","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","borderWidth","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","pointsRunningTotalsPerYear","this","Object","prototype","hasOwnProperty","call","yearElement","index","length","nextElement","push","dataPointCount","Math","max","labels","element","toString","chartData","datasets","getPointAndEventsPerYear","pointsAndEventsPerYear","map","value","resultAny","x","y","event","label","backgroundColor","borderColor","pointBorderColor","pointHoverBackgroundColor","slice","playoffFormValues","relegationFormValues","chartOptions","maintainAspectRatio","scales","yAxis","type","plugins","tooltip","callbacks","context","objValue","dataset","dataIndex","raw","constructor","progressStatus","eventProgress","status","includes","homeTeam","name","full","scores","score","awayTeam","minutesElapsed","minutesIntoAddedTime","style","position","height","className","margin","id","onChange","htmlFor","checked","keys","i","isNaN","display","marginLeft","options","React","defaultTeamNameInfo","linkText","fullName","competitionNames","App","useState","undefined","setPointsPerYear","setEventsPerYear","teamNameLinkTextItems","setTeamNameLinkTextItems","teamNameInfoItems","setTeamNameInfoItems","selectedTeamNameInfoItem","setSelectedTeamNameInfoItem","loading","setLoading","useEffect","fetchSportsTableData","allTeamNameAbbrLinks","allTeamNameLinkTextItems","url","competitionNameIndex","fetch","responseJson","json","responseSportsTableData","teamRows","payload","body","sportTables","tables","rows","teamNameAbbrLinks","teamRow","cells","td","abbrLink","teamNameAbbrLink","link","split","defined","forEach","allTeamNameInfoItems","text","sort","allTeamNameInfoItemsDefined","filter","a","b","fetchMatchListData","getEventPoints","team","otherTeam","teamScore","otherTeamScore","eventOutcome","startDateISO","endDateISO","todayISO","Date","toISOString","substr","tValue","responseData","payloadItems","responseFootballScoresMatchListData","payloadItem","matchDataItems","matchData","tournamentDatesWithEvents","leagueEventsTemp","leagueNames","matchDataItem","key","events","ev","indexOf","tournamentSlug","error","startTime","le","unshift","eventKey","isTBC","eventStatus","eventStatusNote","eventStatusReason","eventOutcomeType","eventType","seriesWinner","cpsId","cpsLive","halfTime","fullTime","extraTime","shootout","aggregate","aggregateGoalsAway","formation","Loss","first","abbreviation","Win","period","venue","homeCountry","officials","tournamentInfo","eventActions","startTimeInUKHHMM","comment","href","tournamentName","textAlign","target","nextItem","find","fontSize","justifyContent","alignItems","border","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f2751ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as Chart from \"chart.js\";\r\nimport { BarController, BarElement, LinearScale, TimeScale, Tooltip, CategoryScale, LineController, PointElement, LineElement } from \"chart.js\";\r\nimport { ReactChart } from \"chartjs-react\";\r\nimport * as React from \"react\";\r\nimport internal from \"stream\";\r\nimport { Event } from \"../models/football-scores-match-list\";\r\n\r\nReactChart.register(\r\n  BarController,\r\n  LinearScale,\r\n  BarElement,\r\n  TimeScale,\r\n  Tooltip,\r\n  CategoryScale,\r\n  LineController,\r\n  PointElement,\r\n  LineElement);\r\n\r\ninterface PointsLineChartProps {\r\n  minimumYear: number;\r\n  maximumYear: number;\r\n\r\n  pointsPerYear: PointsPerYear;\r\n\r\n  eventsPerYear?: EventsPerYear;\r\n}\r\n\r\ntype ShowYears = {\r\n  [year: number]: boolean;\r\n}\r\n\r\nexport type PointsPerYear = {\r\n  [year: number]: number[];\r\n}\r\n\r\nexport type EventsPerYear = {\r\n  [year: number]: Event[];\r\n}\r\n\r\ninterface PointsLineChartState {\r\n  showTrendLines: boolean;\r\n\r\n  showAllDataPoints: boolean;\r\n\r\n  showYears: ShowYears;\r\n}\r\n\r\nconst defaultState: PointsLineChartState = {\r\n  showTrendLines: false,\r\n  showAllDataPoints: true,\r\n\r\n  showYears: {\r\n    // 2016: false,\r\n    2017: false,\r\n    2018: false,\r\n    2019: false,\r\n    2020: false,\r\n    2021: true,\r\n    2022: true\r\n  }\r\n}\r\n\r\nclass PointsLineChart extends React.Component<\r\n  PointsLineChartProps,\r\n  PointsLineChartState\r\n> {\r\n\r\n  constructor(props = {\r\n    minimumYear: 2017,\r\n    maximumYear: 2022,\r\n    pointsPerYear: {\r\n      // 2016: [],\r\n      2017: [],\r\n      2018: [],\r\n      2019: [],\r\n      2020: [],\r\n      2021: [],\r\n      2022: [],\r\n    },\r\n    eventsPerYear: {\r\n      // 2016: [],\r\n      2017: [],\r\n      2018: [],\r\n      2019: [],\r\n      2020: [],\r\n      2021: [],\r\n      2022: [],\r\n    }\r\n  }) {\r\n    super(props);\r\n    this.state = defaultState;\r\n  }\r\n\r\n  handleShowTrendLines = () => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.showTrendLines = !prevState.showTrendLines;\r\n      nextState.showYears = { ...prevState.showYears };\r\n\r\n      console.warn(\"handleShowTrendLines\");\r\n      console.warn(JSON.stringify(nextState));\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  handleShowAllDataPoints = () => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.showAllDataPoints = !prevState.showAllDataPoints;\r\n      nextState.showYears = { ...prevState.showYears };\r\n\r\n      console.warn(\"showAllDataPoints\");\r\n      console.warn(JSON.stringify(nextState));\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  handleShowYear = (year: number) => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.showYears = { ...prevState.showYears };\r\n      nextState.showYears[year] = !prevState.showYears[year];\r\n\r\n      console.warn(\"handleShowYear : \" + year);\r\n      console.warn(JSON.stringify(nextState));\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const redRgba = \"255, 0, 0\";\r\n    const redLineColour = `rgba(${redRgba}, 1)`;\r\n    const redLegendFillColour = `rgba(${redRgba}, 0.4)`;\r\n\r\n    // 128, 0, 128\r\n    const purpleRgba = \"85, 85, 85\";\r\n    const purpleLineColour = `rgba(${purpleRgba}, 1)`;\r\n    const purpleLegendFillColour = `rgba(${purpleRgba}, 0.4)`;\r\n\r\n    const slateBlueRgba = \"0, 100, 0\";\r\n    const slateBlueLineColour = `rgba(${slateBlueRgba}, 1)`;\r\n    const slateBlueLegendFillColour = `rgba(${slateBlueRgba}, 0.4)`;\r\n\r\n    const greyRgba = \"220, 220, 220\";\r\n    const greyLineColour = `rgba(${greyRgba}, 1)`;\r\n    // const greyLegendFillColour = `rgba(${greyRgba}, 0.4)`;\r\n\r\n    // 2016 - Alice Blue\r\n    const aliceBlueRgba = \"0, 0, 255\";\r\n    const aliceBlueLineColour = `rgba(${aliceBlueRgba}, 1)`;\r\n    const aliceBlueLegendFillColour = `rgba(${aliceBlueRgba}, 0.4)`;\r\n\r\n    const greenRgba = \"75, 192, 192\";\r\n    const greenLineColour = `rgba(${greenRgba}, 1)`;\r\n    const greenLegendFillColour = `rgba(${greenRgba}, 0.4)`;\r\n\r\n    const orangeRgba = \"255, 165, 0\";\r\n    const orangeLineColour = `rgba(${orangeRgba}, 1)`;\r\n    const orangeLegendFillColour = `rgba(${orangeRgba}, 0.4)`;\r\n\r\n    const defaultChartDataSet: Chart.ChartDataset = {\r\n      // label: \"2016-\",\r\n      fill: false,\r\n\r\n      // LineChart\r\n      // lineTension: 0.1,\r\n\r\n      // backgroundColor: aliceBlueLegendFillColour,\r\n      // borderColor: aliceBlueLineColour,\r\n\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [3, 3],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n\r\n      borderWidth: 3,\r\n\r\n      // pointBorderColor: aliceBlueLineColour,\r\n\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n\r\n      // pointHoverBackgroundColor: aliceBlueLineColour,\r\n\r\n      pointHoverBorderColor: greyLineColour,\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      // data: pointsRunningTotalsPerYear[2016]\r\n      data: []\r\n    }\r\n\r\n    const pointsRunningTotalsPerYear: PointsPerYear = {\r\n      // 2016: [],\r\n      2017: [],\r\n      2018: [],\r\n      2019: [],\r\n      2020: [],\r\n      2021: [],\r\n      2022: [],\r\n    }\r\n\r\n    const pointsPerYear: PointsPerYear = this.props.pointsPerYear;\r\n\r\n    for (const year in pointsRunningTotalsPerYear) {\r\n      if (Object.prototype.hasOwnProperty.call(pointsRunningTotalsPerYear, year)) {\r\n        const yearElement = pointsRunningTotalsPerYear[year];\r\n\r\n        if (pointsPerYear[year]) {\r\n          for (let index = 0; index < pointsPerYear[year].length; index++) {\r\n            const runningTotal = index === 0 ? 0 : yearElement[index - 1];\r\n\r\n            const nextElement = runningTotal + pointsPerYear[year][index];\r\n\r\n            yearElement.push(nextElement);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const dataPointCount =\r\n      this.state.showAllDataPoints ?\r\n        Math.max(\r\n          // pointsPerYear[2016]?.length || 0,\r\n          pointsPerYear[2017]?.length || 0,\r\n          pointsPerYear[2018]?.length || 0,\r\n          pointsPerYear[2019]?.length || 0,\r\n          pointsPerYear[2020]?.length || 0,\r\n          pointsPerYear[2021]?.length || 0,\r\n          pointsPerYear[2022]?.length || 0,\r\n        ) :\r\n        Math.max((pointsPerYear[2022]?.length || 0) + 10, 12);\r\n\r\n    const labels: string[] = [];\r\n\r\n    for (let index = 0; index < dataPointCount; index++) {\r\n      const gameNumber = index;\r\n\r\n      const element =\r\n        (gameNumber % 5 === 0 ||\r\n          gameNumber === 1 ||\r\n          gameNumber === 23 ||\r\n          gameNumber === 46) &&\r\n          gameNumber !== 45\r\n          ? gameNumber.toString(10)\r\n          : \"\";\r\n\r\n      labels.push(element);\r\n    }\r\n\r\n    const chartData: Chart.ChartData = {\r\n      labels: labels,\r\n\r\n      datasets: []\r\n    };\r\n\r\n    const getPointAndEventsPerYear = (year: number, pointsPerYear: number[]) => {\r\n      const pointsAndEventsPerYear = pointsPerYear.map((value, index) => {\r\n        const resultAny: any = {\r\n          x: index + 1,\r\n          y: value,\r\n        };\r\n\r\n        resultAny.event = this.props.eventsPerYear ? this.props.eventsPerYear[year][index] : null;\r\n\r\n        const result: Chart.Point = resultAny as Chart.Point;\r\n\r\n        return result;\r\n      });\r\n\r\n      return pointsAndEventsPerYear;\r\n    }\r\n\r\n    if (this.state.showYears[2017]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2017-\",\r\n          backgroundColor: aliceBlueLegendFillColour,\r\n          borderColor: aliceBlueLineColour,\r\n          pointBorderColor: aliceBlueLineColour,\r\n          pointHoverBackgroundColor: aliceBlueLineColour,\r\n          data: getPointAndEventsPerYear(2017, pointsRunningTotalsPerYear[2017].slice(0, dataPointCount)),\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2018]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2018-\",\r\n          backgroundColor: purpleLegendFillColour,\r\n          borderColor: purpleLineColour,\r\n          pointBorderColor: purpleLineColour,\r\n          pointHoverBackgroundColor: purpleLineColour,\r\n          data: getPointAndEventsPerYear(2018, pointsRunningTotalsPerYear[2018].slice(0, dataPointCount)),\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2019]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2019-\",\r\n          backgroundColor: slateBlueLegendFillColour,\r\n          borderColor: slateBlueLineColour,\r\n          pointBorderColor: slateBlueLineColour,\r\n          pointHoverBackgroundColor: slateBlueLineColour,\r\n          data: getPointAndEventsPerYear(2019, pointsRunningTotalsPerYear[2019].slice(0, dataPointCount)),\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2020]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2020-\",\r\n          backgroundColor: slateBlueLegendFillColour,\r\n          borderColor: slateBlueLineColour,\r\n          pointBorderColor: slateBlueLineColour,\r\n          pointHoverBackgroundColor: slateBlueLineColour,\r\n          borderDash: [],\r\n          data: getPointAndEventsPerYear(2020, pointsRunningTotalsPerYear[2020].slice(0, dataPointCount)),\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2021]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2021-\",\r\n          backgroundColor: purpleLegendFillColour,\r\n          borderColor: purpleLineColour,\r\n          pointBorderColor: purpleLineColour,\r\n          pointHoverBackgroundColor: purpleLineColour,\r\n          borderDash: [],\r\n          data: getPointAndEventsPerYear(2021, pointsRunningTotalsPerYear[2021].slice(0, dataPointCount)),\r\n        });\r\n      }\r\n    }\r\n\r\n    // if (this.state.showYears[2021]) {\r\n    //   if (chartData.datasets) {\r\n    //     chartData.datasets.push({\r\n    //       ...defaultChartDataSet,\r\n    //       label: \"2021-\",\r\n    //       backgroundColor: redLegendFillColour,\r\n    //       borderColor: redLineColour,\r\n    //       pointBorderColor: redLineColour,\r\n    //       pointHoverBackgroundColor: redLineColour,\r\n    //       borderDash: [],\r\n    //       // data: pointsRunningTotalsPerYear[2021].slice(0, dataPointCount),\r\n\r\n    //       data: getPointAndEventsPerYear(2021, pointsRunningTotalsPerYear[2021].slice(0, dataPointCount)),\r\n\r\n    //       borderWidth: 4\r\n    //     });\r\n    //   }\r\n    // }\r\n\r\n    if (this.state.showYears[2022]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2022-\",\r\n          backgroundColor: redLegendFillColour,\r\n          borderColor: redLineColour,\r\n          pointBorderColor: redLineColour,\r\n          pointHoverBackgroundColor: redLineColour,\r\n          borderDash: [],\r\n          // data: pointsRunningTotalsPerYear[2021].slice(0, dataPointCount),\r\n\r\n          data: getPointAndEventsPerYear(2022, pointsRunningTotalsPerYear[2022].slice(0, dataPointCount)),\r\n\r\n          borderWidth: 4\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showTrendLines) {\r\n      const playoffFormValues: number[] = [];\r\n\r\n      for (let index = 0; index < dataPointCount; index++) {\r\n        // const element = (index + 1) * 1.7;\r\n        const element = index * 1.61;\r\n        playoffFormValues.push(element);\r\n      }\r\n\r\n      const relegationFormValues: number[] = [];\r\n\r\n      for (let index = 0; index < dataPointCount; index++) {\r\n        const element = index * 1.0;\r\n        relegationFormValues.push(element);\r\n      }\r\n\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"Playoffs\",\r\n          backgroundColor: greenLegendFillColour,\r\n          borderColor: greenLineColour,\r\n          pointBorderColor: greenLineColour,\r\n          pointHoverBackgroundColor: greenLineColour,\r\n          borderDash: [5, 15],\r\n          data: playoffFormValues,\r\n        });\r\n\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"Relegation\",\r\n          backgroundColor: orangeLegendFillColour,\r\n          borderColor: orangeLineColour,\r\n          pointBorderColor: orangeLineColour,\r\n          pointHoverBackgroundColor: orangeLineColour,\r\n          borderDash: [5, 15],\r\n          data: relegationFormValues\r\n        });\r\n      }\r\n    }\r\n\r\n    const isObject = (objValue: any) => {\r\n      return objValue && typeof objValue === 'object' && objValue.constructor === Object;\r\n    }\r\n\r\n    const chartOptions: Chart.ChartOptions = {\r\n      // responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        x: {\r\n\r\n        },\r\n        yAxis: {\r\n          type: \"linear\",\r\n        }\r\n      }\r\n      ,\r\n      plugins: {\r\n        tooltip: {\r\n          callbacks: {\r\n            label: (context: any) => {\r\n              var label = (context.dataset as any).label || '';\r\n              // var label = context.label || '';\r\n\r\n              if (context.dataIndex === 0) {\r\n                return \"\";\r\n              }\r\n\r\n              if (isObject(context.raw)) {\r\n                if (label) {\r\n                  label += `: ${context.raw.y === 1 ? context.raw.y + \" pt\" : context.raw.y + \" pts\"}`;\r\n                }\r\n\r\n                if (label) {\r\n                  // label += ` : ${JSON.stringify(context.raw.event, null, 2)}`;\r\n\r\n                  const event = (context.raw.event as Event);\r\n                  const progressStatus = event?.eventProgress?.status;\r\n                  const showScoreStatuses = [\"RESULT\", \"LIVE\"];\r\n\r\n                  if (showScoreStatuses.includes(progressStatus)) {\r\n                    label += ` : ${event.homeTeam.name.full} ${event.homeTeam.scores.score} - ${event.awayTeam.scores.score} ${event.awayTeam.name.full}`;\r\n                  }\r\n\r\n                  if (event?.eventProgress?.status === \"LIVE\") {\r\n                    label += ` : ${event.eventProgress.status} (${event.minutesElapsed}'${event.minutesIntoAddedTime ? \" +\" + event.minutesIntoAddedTime : \"\"})`;\r\n                  }\r\n                }\r\n              } else {\r\n                if (label) {\r\n                  label += `: ${context.raw}`;\r\n                }\r\n              }\r\n\r\n              // if (context.parsed.y !== null) {\r\n              //     label += new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(context.parsed.y);\r\n              // }\r\n\r\n              return label;\r\n            }\r\n          }\r\n        }\r\n        // tooltip: chartTooltipCallback\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ position: \"relative\", height: \"80vh\" }}>\r\n        <div\r\n          className=\"custom-control custom-checkbox\"\r\n          style={{ margin: \"10px 30px 5px 25px\" }}\r\n        >\r\n          <label className=\"custom-control-label\">Show: </label>{\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customCheck1\"\r\n            onChange={() => this.handleShowTrendLines()}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n            Trend Lines\r\n          </label>\r\n\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customCheck2\"\r\n            onChange={() => this.handleShowAllDataPoints()}\r\n            checked={this.state.showAllDataPoints}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"customCheck2\">\r\n            All Points\r\n          </label>\r\n\r\n          {/* <pre>\r\n            {JSON.stringify(this.state, null, 2)}\r\n          </pre> */}\r\n\r\n          {/* {\r\n            Object.keys(this.state.showYears).map(i =>\r\n            (!isNaN(+i) &&\r\n              <div key={+i} style={{ display: \"inline\" }}>\r\n                <h3>{i} : {(this.state.showYears as any)[i]}</h3>\r\n              </div>\r\n            ))\r\n          } */}\r\n\r\n          {\r\n            Object.keys(pointsRunningTotalsPerYear).map(i =>\r\n            (!isNaN(+i) &&\r\n              <div key={+i} style={{ display: \"inline\" }}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id={`show${i}Checkbox`}\r\n                  onChange={() => this.handleShowYear(+i)}\r\n                  style={{ marginLeft: \"10px\" }}\r\n                  checked={(this.state.showYears as any)[i]} />\r\n                <label className=\"custom-control-label\" htmlFor={`show${i}Checkbox`}>\r\n                  {i}-\r\n                </label>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n\r\n        <ReactChart\r\n          type=\"line\"\r\n          data={chartData}\r\n          options={chartOptions}\r\n        />\r\n\r\n        {false &&\r\n          <pre>{JSON.stringify(chartData, null, 2)}</pre>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PointsLineChart;\r\n","// Generated by https://quicktype.io\r\n\r\nexport interface FootballScoresMatchListData {\r\n  meta: FootballScoresMatchListDataMeta;\r\n  payload: Payload[];\r\n}\r\n\r\nexport interface FootballScoresMatchListDataMeta {\r\n  pollFrequencyInMilliseconds: number;\r\n}\r\n\r\nexport interface Payload {\r\n  meta: PayloadMeta;\r\n  body: Body;\r\n}\r\n\r\nexport interface Body {\r\n  fixtureListMeta: FixtureListMeta;\r\n  matchData: MatchDatum[];\r\n}\r\n\r\nexport interface FixtureListMeta {\r\n  scorersButtonShouldBeEnabled: boolean;\r\n}\r\n\r\nexport interface MatchDatum {\r\n  tournamentMeta: TournamentMeta;\r\n  tournamentDatesWithEvents: TournamentDatesWithEvents;\r\n}\r\n\r\nexport interface TournamentDatesWithEvents {\r\n  //   \"Wednesday-3rd-March\": March[];\r\n  //   \"Saturday-6th-March\": March[];\r\n  //   \"Saturday-13th-March\": March[];\r\n  //   \"Wednesday-17th-March\": March[];\r\n  //   \"Saturday-20th-March\": March[];\r\n  [key: string]: MatchDay[];\r\n}\r\n\r\nexport interface MatchDay {\r\n  round: Round;\r\n  events: Event[];\r\n}\r\n\r\nexport interface Event {\r\n  eventKey: string;\r\n  startTime: string;\r\n  isTBC: boolean;\r\n  minutesElapsed: number;\r\n  minutesIntoAddedTime: number;\r\n  eventStatus: string;\r\n  eventStatusNote: string;\r\n  eventStatusReason: null;\r\n  eventOutcomeType: string;\r\n  eventType: string;\r\n  seriesWinner: null;\r\n  cpsId: string;\r\n  cpsLive: string;\r\n  homeTeam: Team;\r\n  awayTeam: Team;\r\n  eventProgress: EventProgress;\r\n  venue: Venue;\r\n  officials: any[];\r\n  tournamentInfo: string;\r\n  eventActions: string;\r\n  startTimeInUKHHMM: string;\r\n  comment: string;\r\n  href: string;\r\n  tournamentName: Name;\r\n  tournamentSlug: string;\r\n}\r\n\r\nexport interface Team {\r\n  key: string;\r\n  scores: Scores;\r\n  formation: string;\r\n  eventOutcome: EventOutcome;\r\n  name: Name;\r\n}\r\n\r\nexport enum EventOutcome {\r\n  Loss = \"loss\",\r\n  Tie = \"tie\",\r\n  Win = \"win\",\r\n  Undecided = \"undecided\",\r\n}\r\n\r\nexport interface Name {\r\n  first: string;\r\n  full: string;\r\n  abbreviation: string;\r\n  last?: string;\r\n  videCode?: string;\r\n}\r\n\r\nexport interface Scores {\r\n  score: number;\r\n  halfTime: number;\r\n  fullTime: number;\r\n  extraTime: number | null;\r\n  shootout: number | null;\r\n  aggregate: number | null;\r\n  aggregateGoalsAway: number | null;\r\n}\r\n\r\nexport interface EventProgress {\r\n  period: string;\r\n  status: string;\r\n}\r\n\r\nexport interface Venue {\r\n  name: Name;\r\n  homeCountry: string;\r\n}\r\n\r\nexport interface Round {\r\n  key: string;\r\n  name: null;\r\n}\r\n\r\nexport interface TournamentMeta {\r\n  tournamentSlug: string;\r\n  tournamentName: Name;\r\n}\r\n\r\nexport interface PayloadMeta {\r\n  responseCode: number;\r\n  hash: string;\r\n  template: string;\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PointsLineChart, { EventsPerYear, PointsPerYear } from './components/points-line-chart';\nimport { FootballScoresMatchListData, Event, Team, EventOutcome } from './models/football-scores-match-list';\nimport { AbbrLink, SportsTableData } from './models/sports-table-data';\nimport { v4 as uuidv4 } from 'uuid';\n\ntype TeamNameInfo = {\n  linkText: string;\n  fullName: string;\n}\n\nconst defaultTeamNameInfo: TeamNameInfo = {\n  linkText: \"bristol-city\",\n  fullName: \"Bristol City\"\n};\n\nconst competitionNames = [\n  \"premier-league\",\n  \"championship\",\n  \"league-one\",\n  \"league-two\",\n  \"scottish-premiership\",\n  \"spanish-la-liga\"\n];\n\nconst minimumYear = 2017;\nconst maximumYear = 2022;\n\nfunction App() {\n  // const [footballScoresMatchListData, setFootballScoresMatchListData] = useState<\n  //   FootballScoresMatchListData | undefined\n  // >(undefined);\n\n  // const [tournamentDatesWithEvents, setTournamentDatesWithEvents] = useState<\n  //   TournamentDatesWithEvents | undefined\n  // >(undefined);\n\n  // const [leagueEvents, setLeagueEvents] = useState<\n  //   Event[] | undefined\n  // >(undefined);\n\n  // const [points2020, setPoints2020] = useState<\n  //   number[]\n  // >([]);\n\n  const [pointsPerYear, setPointsPerYear] = useState<\n    PointsPerYear | undefined\n  >(undefined);\n\n  const [eventsPerYear, setEventsPerYear] = useState<\n    EventsPerYear | undefined\n  >(undefined);\n\n  const [teamNameLinkTextItems, setTeamNameLinkTextItems] = useState<\n    (string | undefined)[] | []\n  >([]);\n\n  const [teamNameInfoItems, setTeamNameInfoItems] = useState<\n    (TeamNameInfo | undefined)[] | []\n  >([]);\n\n  const [selectedTeamNameInfoItem, setSelectedTeamNameInfoItem] = useState<\n    TeamNameInfo\n  >(defaultTeamNameInfo);\n\n  const [loading, setLoading] = useState<\n    boolean\n  >(false);\n\n  // // https://push.api.bbci.co.uk/batch?t=/data/bbc-morph-sport-tables-data/competition/championship/sport/football/version/2.0.2?timeout=5\n  useEffect(() => {\n    const fetchSportsTableData = async () => {\n      // const pointsPerYear: PointsPerYear = {};\n\n      const allTeamNameAbbrLinks: (AbbrLink | undefined)[] = [];\n      const allTeamNameLinkTextItems: (string | undefined)[] = [];\n\n      for (let competitionNameIndex = 0; competitionNameIndex < competitionNames.length; competitionNameIndex++) {\n        const competitionName = competitionNames[competitionNameIndex];\n        const url = `https://push.api.bbci.co.uk/batch?t=/data/bbc-morph-sport-tables-data/competition/${competitionName}/sport/football/version/2.0.2?timeout=5`;\n\n        const responseJson = await fetch(url);\n        const responseSportsTableData: SportsTableData = await responseJson.json();\n        const teamRows = responseSportsTableData?.payload[0].body.sportTables.tables[0].rows;\n\n        const teamNameAbbrLinks = teamRows.map(teamRow => teamRow.cells[2].td.abbrLink); // .filter(i => i !== undefined);\n        const teamNameLinkTextItems = teamNameAbbrLinks.map(teamNameAbbrLink => teamNameAbbrLink ? teamNameAbbrLink.link.split(\"/\").slice(-1)[0] : null);\n\n        allTeamNameAbbrLinks.push(...teamNameAbbrLinks);\n\n        const defined: string[] = [];\n\n        teamNameLinkTextItems.forEach(i => {\n          if (i != null) {\n            defined.push(i);\n          }\n        });\n\n        allTeamNameLinkTextItems.push(...defined);\n      }\n\n      const allTeamNameInfoItems: (TeamNameInfo | undefined)[] = allTeamNameAbbrLinks.map(teamNameAbbrLink => {\n        if (teamNameAbbrLink === undefined) {\n          return undefined;\n        }\n\n        const linkText = teamNameAbbrLink.link.split(\"/\").slice(-1)[0];\n\n        return {\n          linkText,\n          fullName: teamNameAbbrLink.text\n        }\n      });\n\n      allTeamNameLinkTextItems.sort();\n      setTeamNameLinkTextItems(allTeamNameLinkTextItems);\n\n      const allTeamNameInfoItemsDefined = allTeamNameInfoItems.filter(i => i !== undefined);\n\n      allTeamNameInfoItemsDefined.sort((a: TeamNameInfo | undefined, b: TeamNameInfo | undefined) => {\n        if (a === undefined) {\n          return 0;\n        }\n\n        if (b === undefined) {\n          return 0;\n        }\n\n        if (a.fullName < b.fullName) {\n          return -1;\n        }\n        if (a.fullName > b.fullName) {\n          return 1;\n        }\n        // a must be equal to b\n        return 0;\n      });\n\n      setTeamNameInfoItems(allTeamNameInfoItemsDefined);\n\n      // setLoading(false);\n    };\n\n    fetchSportsTableData();\n\n  }, []);\n\n  useEffect(() => {\n    const fetchMatchListData = async () => {\n      setLoading(true);\n\n      const getEventPoints = (event: Event) => {\n        const team: Team = event.homeTeam.name.full === selectedTeamNameInfoItem.fullName ? event.homeTeam : event.awayTeam;\n        const otherTeam: Team = event.homeTeam.name.full !== selectedTeamNameInfoItem.fullName ? event.homeTeam : event.awayTeam;\n\n        if (event.eventProgress.status === \"LIVE\") {\n          // console.warn(JSON.stringify(team, null, 2));\n          const teamScore = team.scores.score;\n          const otherTeamScore = otherTeam.scores.score;\n\n          if (teamScore < otherTeamScore) {\n            return 0;\n          }\n\n          if (teamScore > otherTeamScore) {\n            return 3;\n          }\n\n          return 1;\n        }\n\n        const points = team.eventOutcome === \"loss\" ? 0 : team.eventOutcome === \"win\" ? 3 : 1;\n\n        return points;\n      }\n\n      const pointsPerYear: PointsPerYear = {};\n      const eventsPerYear: EventsPerYear = {};\n\n      // const minimumYear = 2017;\n      // const maximumYear = 2022;\n\n      for (let year = maximumYear; year >= minimumYear; year--) {\n        const startDateISO = `${year}-07-29`; // Was 08-01 - Scottish football started on 31 July\n        const endDateISO = `${year + 1}-07-28`;\n        const todayISO = new Date().toISOString().substr(0, 10);\n\n        // const tValue = `%2Fdata%2Fbbc-morph-football-scores-match-list-data%2FendDate%2F${endDateISO}%2FstartDate%2F${startDateISO}%2Fteam%2F${selectedTeamNameInfoItem.linkText}%2FtodayDate%2F${todayISO}%2Fversion%2F2.4.6?timeout=5&c=${uuidv4()}`;\n        const tValue = `%2Fdata%2Fbbc-morph-football-scores-match-list-data%2FendDate%2F${endDateISO}%2FstartDate%2F${startDateISO}%2Fteam%2F${selectedTeamNameInfoItem.linkText}%2FtodayDate%2F${todayISO}%2Fversion%2F2.4.6?timeout=5`;\n\n        const url = `https://push.api.bbci.co.uk/batch?t=${tValue}`;\n\n        const responseJson = await fetch(url);\n        const responseData = await responseJson.json();\n        const responseFootballScoresMatchListData: FootballScoresMatchListData = responseData as FootballScoresMatchListData;\n\n        const payloadItems = responseFootballScoresMatchListData?.payload;\n        const payloadItem = payloadItems && payloadItems.length > 0 ? payloadItems[0] : null;\n        const matchDataItems = payloadItem?.body?.matchData;\n        const tournamentDatesWithEvents = matchDataItems && matchDataItems.length > 0 ? matchDataItems[0]?.tournamentDatesWithEvents : null;\n\n        // setFootballScoresMatchListData(responseFootballScoresMatchListData);\n        // setTournamentDatesWithEvents(responseFootballScoresMatchListData?.payload[0].body.matchData[0].tournamentDatesWithEvents);\n\n        const leagueEventsTemp: Event[] = [];\n\n        const leagueNames = [...competitionNames];\n        leagueNames.push(\"national-league\");\n\n        if (tournamentDatesWithEvents) {\n          responseFootballScoresMatchListData.payload[0].body.matchData.forEach(matchDataItem => {\n            Object.keys(matchDataItem.tournamentDatesWithEvents).forEach(key => matchDataItem.tournamentDatesWithEvents[key][0].events.forEach(ev => {\n              if (leagueNames.indexOf(ev.tournamentSlug) === -1) {\n                console.warn(`${ev.tournamentSlug}`);\n              }\n\n              if (ev.eventProgress.status !== \"RESULT\") {\n                // FIXTURE\n                // POSTPONED\n                // LIVE\n                console.warn(`${ev.tournamentSlug} : ${ev.eventProgress.status}`);\n              }\n\n              // if (ev.eventProgress.status === \"LIVE\") {\n              //   console.warn(`${JSON.stringify(ev)}`);\n              // }\n\n              if (leagueNames.indexOf(ev.tournamentSlug) > -1 && (ev.eventProgress.status === \"RESULT\" || ev.eventProgress.status === \"LIVE\")) {\n                // if (team.eventOutcome === \"undecided\") {\n                //   console.warn(JSON.stringify(team, null, 2));\n                // }\n                leagueEventsTemp.push(ev);\n              }\n            }));\n          });\n        } else {\n          try {\n            console.warn(JSON.stringify(responseData, null, 2));\n          } catch (error) {\n            console.warn(error);\n          }\n        }\n\n        leagueEventsTemp.sort((a: Event, b: Event) => {\n          if (a.startTime < b.startTime) {\n            return -1;\n          }\n          if (a.startTime > b.startTime) {\n            return 1;\n          }\n          // a must be equal to b\n          return 0;\n        });\n\n        // setLeagueEvents(leagueEventsTemp);\n\n        // setPoints2020(leagueEvents.map(le => getEventPoints(le)));\n        pointsPerYear[year] = leagueEventsTemp.map(le => getEventPoints(le));\n        pointsPerYear[year].unshift(0);\n\n        eventsPerYear[year] = leagueEventsTemp;\n        eventsPerYear[year].unshift({\n          eventKey: \"\",\n          startTime: \"\",\n          isTBC: false,\n          minutesElapsed: 0,\n          minutesIntoAddedTime: 0,\n          eventStatus: \"\",\n          eventStatusNote: \"\",\n          eventStatusReason: null,\n          eventOutcomeType: \"\",\n          eventType: \"\",\n          seriesWinner: null,\n          cpsId: \"\",\n          cpsLive: \"\",\n          homeTeam: {\n            key: \"1\",\n            scores: {\n              score: 0,\n              halfTime: 0,\n              fullTime: 0,\n              extraTime: 0,\n              shootout: 0,\n              aggregate: 0,\n              aggregateGoalsAway: 0\n            },\n            formation: \"\",\n            eventOutcome: EventOutcome.Loss,\n            name: {\n              first: selectedTeamNameInfoItem.fullName,\n              full: selectedTeamNameInfoItem.fullName,\n              abbreviation: selectedTeamNameInfoItem.fullName\n            }\n          },\n          awayTeam: {\n            key: \"1\",\n            scores: {\n              score: 1,\n              halfTime: 1,\n              fullTime: 1,\n              extraTime: 1,\n              shootout: 1,\n              aggregate: 1,\n              aggregateGoalsAway: 1\n            },\n            formation: \"\",\n            eventOutcome: EventOutcome.Win,\n            name: {\n              first: selectedTeamNameInfoItem.fullName + \"X\",\n              full: selectedTeamNameInfoItem.fullName + \"X\",\n              abbreviation: selectedTeamNameInfoItem.fullName + \"X\"\n            }\n          },\n          eventProgress: {\n            period: \"\",\n            status: \"RESULT\"\n          },\n          venue: {\n            name: {\n              first: \"X\",\n              full: \"X\",\n              abbreviation: \"X\"\n            },\n            homeCountry: \"UK\"\n          },\n          officials: [],\n          tournamentInfo: \"\",\n          eventActions: \"\",\n          startTimeInUKHHMM: \"\",\n          comment: \"\",\n          href: \"\",\n          tournamentName: {\n            first: \"X\",\n            full: \"X\",\n            abbreviation: \"X\"\n          },\n          tournamentSlug: \"\",\n        });\n\n        if (year === maximumYear - 1) {\n          setPointsPerYear(pointsPerYear);\n          setEventsPerYear(eventsPerYear);\n\n          setLoading(false);\n        }\n      }\n\n      setPointsPerYear(pointsPerYear);\n      setEventsPerYear(eventsPerYear);\n\n      setLoading(false);\n    };\n\n    fetchMatchListData();\n\n  }, [selectedTeamNameInfoItem]);\n\n  const handleSelectedTeamChange = (event: any) => {\n    const linkText = event.target.value;\n    const nextItem: TeamNameInfo = {\n      linkText,\n      fullName: teamNameInfoItems.find(i => i?.linkText === linkText)?.fullName || \"NA\"\n    };\n\n    setSelectedTeamNameInfoItem(nextItem);\n  }\n\n  return (\n    <div>\n      {\n        teamNameLinkTextItems &&\n        // <ul>\n        //   {teamNameLinkTextItems.map(name => <li key={name}>{name}</li>)}\n        // </ul>\n        <div style={{ textAlign: \"center\" }}>\n          <select name=\"teamNameInfoItems\" id=\"teamNameInfoItems\" onChange={handleSelectedTeamChange} style={{ fontSize: \"20pt\" }} value={selectedTeamNameInfoItem.linkText}>\n            {/* <option value=\"volvo\">Volvo</option> */}\n            {teamNameInfoItems.map(i => <option key={i?.linkText || 1} value={i?.linkText}>{i?.fullName}</option>)}\n            {/* {selected={i?.linkText == selectedTeamNameInfoItem.linkText}} */}\n          </select>\n        </div>\n      }\n      {/* <pre>{JSON.stringify(selectedTeamNameInfoItem, null, 2)}</pre> */}\n\n      {\n        pointsPerYear && !loading &&\n        <PointsLineChart\n          pointsPerYear={pointsPerYear}\n          eventsPerYear={eventsPerYear}\n          minimumYear={minimumYear}\n          maximumYear={maximumYear}\n        />\n      }\n\n      {\n        (!pointsPerYear || loading) &&\n        // <p>\n        //   Loading...\n        // </p>\n        <div style={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", height: \"400px\", border: \"3px solid white\" }}>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </div>\n      }\n\n      <div>\n        {/* {points2020 &&\n          <pre>{JSON.stringify(points2020, null, 2)}</pre>\n        } */}\n\n        {/* <ul>\n            {leagueEvents &&\n              leagueEvents.map(leagueEvent => <li key={leagueEvent.startTime}>\n                {new Date(leagueEvent.startTime).toDateString()} : {leagueEvent.homeTeam.name.full} {leagueEvent.homeTeam.scores.fullTime} v {leagueEvent.awayTeam.scores.fullTime} {leagueEvent.awayTeam.name.full} : Points = [{getEventPoints(leagueEvent)}]\n              </li>)\n            }\n          </ul> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}